#!/usr/bin/env python3
"""
–ü—Ä–æ—Å—Ç–æ–π —Ç–µ—Å—Ç –±–æ—Ç–∞ –±–µ–∑ Apify (—Ç–∞–∫ –∫–∞–∫ –ª–∏–º–∏—Ç –ø—Ä–µ–≤—ã—à–µ–Ω)
"""

import asyncio
import logging
from config import Config
from mongodb_manager import mongodb

# Configure logging
logging.basicConfig(
    level=logging.INFO,
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s'
)
logger = logging.getLogger(__name__)

async def test_mongodb_connection():
    """–¢–µ—Å—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ MongoDB"""
    print("üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ MongoDB...")
    
    try:
        if await mongodb.connect():
            print("‚úÖ MongoDB –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ!")
            
            # –¢–µ—Å—Ç —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            test_user = await mongodb.create_user(
                telegram_id=123456789,
                username="test_user",
                first_name="Test",
                last_name="User",
                language="ru"
            )
            
            if test_user:
                print("‚úÖ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ!")
                
                # –¢–µ—Å—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ñ–∏–ª—å—Ç—Ä–æ–≤
                test_filters = {
                    "city": "Berlin",
                    "price_min": 500,
                    "price_max": 1500,
                    "rooms_min": 1,
                    "rooms_max": 3
                }
                
                if await mongodb.save_user_filter(123456789, test_filters):
                    print("‚úÖ –§–∏–ª—å—Ç—Ä—ã —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
                    
                    # –¢–µ—Å—Ç –ø–æ–ª—É—á–µ–Ω–∏—è —Ñ–∏–ª—å—Ç—Ä–æ–≤
                    saved_filters = await mongodb.get_user_filter(123456789)
                    if saved_filters:
                        print(f"‚úÖ –§–∏–ª—å—Ç—Ä—ã –ø–æ–ª—É—á–µ–Ω—ã: {saved_filters}")
                    else:
                        print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã")
                else:
                    print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã")
            else:
                print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ–∑–¥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è")
            
            await mongodb.disconnect()
            print("‚úÖ MongoDB –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ —É—Å–ø–µ—à–Ω–æ!")
            return True
        else:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è –∫ MongoDB")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ MongoDB: {e}")
        return False

async def test_config():
    """–¢–µ—Å—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏"""
    print("\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏...")
    
    try:
        print(f"BOT_TOKEN: {'‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' if Config.BOT_TOKEN else '‚ùå –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'}")
        print(f"MONGODB_URI: {'‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' if Config.MONGODB_URI else '‚ùå –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'}")
        print(f"APIFY_TOKEN: {'‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' if Config.APIFY_TOKEN else '‚ùå –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'}")
        print(f"OPENAI_API_KEY: {'‚úÖ –£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' if Config.OPENAI_API_KEY else '‚ùå –ù–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω'}")
        
        print(f"\nApify –∞–∫—Ç–æ—Ä—ã:")
        print(f"  IMMOSCOUT24: {Config.APIFY_ACTOR_IMMOSCOUT24}")
        print(f"  IMMOWELT: {Config.APIFY_ACTOR_IMMOWELT}")
        print(f"  KLEINANZEIGEN: {Config.APIFY_ACTOR_KLEINANZEIGEN}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏: {e}")
        return False

async def test_basic_functionality():
    """–¢–µ—Å—Ç –±–∞–∑–æ–≤–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏"""
    print("\nüîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–∞–∑–æ–≤–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏...")
    
    try:
        # –¢–µ—Å—Ç –∏–º–ø–æ—Ä—Ç–∞ –æ—Å–Ω–æ–≤–Ω—ã—Ö –º–æ–¥—É–ª–µ–π
        from locales import get_text
        from notifications import set_bot_instance, get_apartment_keyboard
        
        print("‚úÖ –û—Å–Ω–æ–≤–Ω—ã–µ –º–æ–¥—É–ª–∏ –∏–º–ø–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
        
        # –¢–µ—Å—Ç –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏–∏
        test_text = get_text("welcome_message", "ru")
        if test_text:
            print("‚úÖ –õ–æ–∫–∞–ª–∏–∑–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞–µ—Ç!")
        else:
            print("‚ùå –ü—Ä–æ–±–ª–µ–º—ã —Å –ª–æ–∫–∞–ª–∏–∑–∞—Ü–∏–µ–π")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏: {e}")
        return False

async def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üè† –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–æ—Ç–∞ –ø–æ–∏—Å–∫–∞ –∫–≤–∞—Ä—Ç–∏—Ä –≤ –ì–µ—Ä–º–∞–Ω–∏–∏")
    print("=" * 60)
    
    # –¢–µ—Å—Ç –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
    config_ok = await test_config()
    
    # –¢–µ—Å—Ç MongoDB
    mongodb_ok = await test_mongodb_connection()
    
    # –¢–µ—Å—Ç –±–∞–∑–æ–≤–æ–π —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏
    functionality_ok = await test_basic_functionality()
    
    print("\n" + "=" * 60)
    print("üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–Ø:")
    print(f"–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è: {'‚úÖ OK' if config_ok else '‚ùå FAIL'}")
    print(f"MongoDB: {'‚úÖ OK' if mongodb_ok else '‚ùå FAIL'}")
    print(f"–§—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å: {'‚úÖ OK' if functionality_ok else '‚ùå FAIL'}")
    
    if config_ok and mongodb_ok and functionality_ok:
        print("\nüéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã! –ë–æ—Ç –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ.")
        print("\nüí° –ü—Ä–∏–º–µ—á–∞–Ω–∏–µ: Apify –ª–∏–º–∏—Ç –ø—Ä–µ–≤—ã—à–µ–Ω, –Ω–æ –±–æ—Ç –º–æ–∂–µ—Ç —Ä–∞–±–æ—Ç–∞—Ç—å —Å –¥—Ä—É–≥–∏–º–∏ –∏—Å—Ç–æ—á–Ω–∏–∫–∞–º–∏ –¥–∞–Ω–Ω—ã—Ö.")
    else:
        print("\n‚ö†Ô∏è –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –Ω–µ –ø—Ä–æ–π–¥–µ–Ω—ã. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—é.")

if __name__ == "__main__":
    asyncio.run(main())
